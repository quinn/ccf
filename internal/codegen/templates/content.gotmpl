// Code generated by go-astro. DO NOT EDIT.
package content

import (
	"embed"
	"fmt"
	"io/fs"

	internalContent "github.com/quinn/go-astro/internal/content"
)

//go:embed {{ .Dirs }}
var FS embed.FS

// ContentItem is an alias for the internal ContentItem type
type ContentItem = internalContent.ContentItem

// Initialize loads all content from the embedded filesystem.
// This must be called before using any Get* functions.
func Initialize() error {
	{{- range .Types }}
	if err := internalContent.LoadItems[{{ .Name }}](FS); err != nil {
		return fmt.Errorf("failed to load {{ .Name | lower }}s: %w", err)
	}
	{{- end }}
	return nil
}

{{- range .Types }}
// Get{{ .Name }}s returns all {{ .Name | lower }}s with their metadata and content.
func Get{{ .Name }}s() ([]ContentItem[{{ .Name }}], error) {
	return internalContent.GetItems[{{ .Name }}]()
}
{{- end }}

// GetFS returns the embedded filesystem containing all content.
func GetFS() fs.FS {
	return FS
}
